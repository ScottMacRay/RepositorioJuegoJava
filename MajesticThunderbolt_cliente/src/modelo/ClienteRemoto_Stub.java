// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package modelo;

public final class ClienteRemoto_Stub
    extends java.rmi.server.RemoteStub
    implements sincronizacionRMI.InterfazServidorCliente, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_colision_0;
    private static java.lang.reflect.Method $method_crearAlien_1;
    private static java.lang.reflect.Method $method_crearBlackAlien_2;
    private static java.lang.reflect.Method $method_destruccionAlien_3;
    private static java.lang.reflect.Method $method_destruccionNave_4;
    private static java.lang.reflect.Method $method_dispararNave_5;
    private static java.lang.reflect.Method $method_disparoAlien_6;
    private static java.lang.reflect.Method $method_disparoDirigido_7;
    private static java.lang.reflect.Method $method_equilibrarNave_8;
    private static java.lang.reflect.Method $method_moverNaveAbajo_9;
    private static java.lang.reflect.Method $method_moverNaveArriba_10;
    private static java.lang.reflect.Method $method_moverNaveDerecha_11;
    private static java.lang.reflect.Method $method_moverNaveIzquierda_12;
    private static java.lang.reflect.Method $method_obtenerIdentificadorCliente_13;
    private static java.lang.reflect.Method $method_regeneracionAlien_14;
    
    static {
	try {
	    $method_colision_0 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("colision", new java.lang.Class[] {int.class});
	    $method_crearAlien_1 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("crearAlien", new java.lang.Class[] {float.class, float.class, float.class, boolean.class});
	    $method_crearBlackAlien_2 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("crearBlackAlien", new java.lang.Class[] {float.class, float.class, float.class, boolean.class});
	    $method_destruccionAlien_3 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("destruccionAlien", new java.lang.Class[] {int.class, int.class});
	    $method_destruccionNave_4 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("destruccionNave", new java.lang.Class[] {int.class, int.class});
	    $method_dispararNave_5 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("dispararNave", new java.lang.Class[] {int.class});
	    $method_disparoAlien_6 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("disparoAlien", new java.lang.Class[] {int.class});
	    $method_disparoDirigido_7 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("disparoDirigido", new java.lang.Class[] {int.class});
	    $method_equilibrarNave_8 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("equilibrarNave", new java.lang.Class[] {int.class});
	    $method_moverNaveAbajo_9 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("moverNaveAbajo", new java.lang.Class[] {int.class});
	    $method_moverNaveArriba_10 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("moverNaveArriba", new java.lang.Class[] {int.class});
	    $method_moverNaveDerecha_11 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("moverNaveDerecha", new java.lang.Class[] {int.class});
	    $method_moverNaveIzquierda_12 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("moverNaveIzquierda", new java.lang.Class[] {int.class});
	    $method_obtenerIdentificadorCliente_13 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("obtenerIdentificadorCliente", new java.lang.Class[] {sincronizacionRMI.InterfazServidorCliente.class});
	    $method_regeneracionAlien_14 = sincronizacionRMI.InterfazServidorCliente.class.getMethod("regeneracionAlien", new java.lang.Class[] {int.class, float.class, float.class, float.class, boolean.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ClienteRemoto_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of colision(int)
    public void colision(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_colision_0, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -7883754130229981382L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of crearAlien(float, float, float, boolean)
    public void crearAlien(float $param_float_1, float $param_float_2, float $param_float_3, boolean $param_boolean_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_crearAlien_1, new java.lang.Object[] {new java.lang.Float($param_float_1), new java.lang.Float($param_float_2), new java.lang.Float($param_float_3), ($param_boolean_4 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE)}, -5200061700776030854L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of crearBlackAlien(float, float, float, boolean)
    public void crearBlackAlien(float $param_float_1, float $param_float_2, float $param_float_3, boolean $param_boolean_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_crearBlackAlien_2, new java.lang.Object[] {new java.lang.Float($param_float_1), new java.lang.Float($param_float_2), new java.lang.Float($param_float_3), ($param_boolean_4 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE)}, 3547545659540384717L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of destruccionAlien(int, int)
    public void destruccionAlien(int $param_int_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_destruccionAlien_3, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Integer($param_int_2)}, 3687977411587696190L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of destruccionNave(int, int)
    public void destruccionNave(int $param_int_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_destruccionNave_4, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Integer($param_int_2)}, -2465351289320698664L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dispararNave(int)
    public void dispararNave(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_dispararNave_5, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -7233163539254868733L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of disparoAlien(int)
    public void disparoAlien(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_disparoAlien_6, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -990359138726036835L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of disparoDirigido(int)
    public void disparoDirigido(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_disparoDirigido_7, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -4350644502885995367L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of equilibrarNave(int)
    public void equilibrarNave(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_equilibrarNave_8, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 4348422634459350391L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moverNaveAbajo(int)
    public void moverNaveAbajo(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_moverNaveAbajo_9, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 6877174297237657296L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moverNaveArriba(int)
    public void moverNaveArriba(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_moverNaveArriba_10, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -7415676730708421578L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moverNaveDerecha(int)
    public void moverNaveDerecha(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_moverNaveDerecha_11, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 1399836622615938105L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moverNaveIzquierda(int)
    public void moverNaveIzquierda(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_moverNaveIzquierda_12, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 47727182287749667L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of obtenerIdentificadorCliente(InterfazServidorCliente)
    public int obtenerIdentificadorCliente(sincronizacionRMI.InterfazServidorCliente $param_InterfazServidorCliente_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_obtenerIdentificadorCliente_13, new java.lang.Object[] {$param_InterfazServidorCliente_1}, -8093047971255649133L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of regeneracionAlien(int, float, float, float, boolean)
    public void regeneracionAlien(int $param_int_1, float $param_float_2, float $param_float_3, float $param_float_4, boolean $param_boolean_5)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_regeneracionAlien_14, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Float($param_float_2), new java.lang.Float($param_float_3), new java.lang.Float($param_float_4), ($param_boolean_5 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE)}, -4022817914797771094L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
